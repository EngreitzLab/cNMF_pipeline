# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
import os
import pandas as pd
# from sympy import expand

configfile: "config/config.json"

# report: "report/workflow.rst"

# Allow users to fix the underlying OS via singularity.
# singularity: "docker://continuumio/miniconda3"

# include: "../../workflow/rules/cNMF_pipeline.smk"
include: "rules/cNMF_Perturb-seq_analysis.smk"
include: "../../workflow/Snakefile"

rule all_perturb_seq_analysis:
	input:
		## Batch correlation
		batch_correlation_pdf = expand(os.path.join(config["figDir"], "{folder}/{sample}/K{k}/{sample}_K{k}_dt_{threshold}_batch.correlation.heatmap.pdf"), folder = config["cNMF_gene_selection"], sample=config["sampleName"], k=config["k"], threshold=[n.replace(".","_") for n in config["thresholds"]]),
		percent_batch_topics_plot = expand(os.path.join(config["figDir"], "{folder}/{sample}/acrossK/percent.batch.topics.pdf"), folder = config["cNMF_gene_selection"], sample=config["sampleName"])


		# motif_plot = expand(os.path.join(config["figDir"], "{{folder}}/{{sample}}/K{{k}}/{{sample}}_K{{k}}_dt_{{threshold}}_zscore{ep_type}.motif.enrichment{test_type_and_threshold}.pdf"), ep_type = ["enhancer", "promoter"], test_type_and_threshold = ["", "_motif.thr.10e-6", ".by.count.ttest", ".by.count.ttest_motif.thr.10e-6", ".by.count.ttest.labelPos", ".by.count.ttest_motif.thr.10e-6.labelPos"])
		# cNMF_Results = expand(os.path.join(config["analysisDir"], "{sample}/{folder}/K{k}/threshold_{threshold}/cNMF_results.k_{k}.dt_{threshold}.RData"), folder = config["cNMF_gene_selection"], sample=sampleName, k=config["k"], threshold=[n.replace(".","_") for n in config["thresholds"]]),
		# cNMF_Analysis = expand(os.path.join(config["analysisDir"], "{sample}/{folder}/K{k}/threshold_{threshold}/cNMFAnalysis.k_{k}.dt_{threshold}.RData"), folder = config["cNMF_gene_selection"], sample=sampleName, k=config["k"], threshold=[n.replace(".","_") for n in config["thresholds"]]),
		# fimo_formatted = expand(os.path.join(config["analysisDir"], "{folder}/{sample}/fimo/fimo_out/fimo.formatted.tsv"), folder = config["cNMF_gene_selection"], sample=config["sampleName"]),
 		# enhancer_motif_enrichment = expand(os.path.join(config["figDir"], "{sample}/{folder}/K{k}/{sample}_K{k}_dt_{threshold}_zscore.enhancer.motif.enrichment.by.count.ttest_motif.thr.10e-6.pdf"), folder = config["cNMF_gene_selection"], sample=sampleName, k=config["k"], threshold=[n.replace(".","_") for n in config["thresholds"]]),
		# heatmap = expand(os.path.join(config["figDir"], "{sample}/{folder}/K{k}/{sample}_K{k}_dt_{threshold}_minGuidePerPtb_{guide_count_thr}.minCellPerGuide_{cell_count_thr}_p.adjust.sig.ptbd.gene_fill.log2fc_heatmap.pdf"), folder = config["cNMF_gene_selection"], sample=sampleName, k=config["k"], threshold=[n.replace(".","_") for n in config["thresholds"]], guide_count_thr = config["guide_count_thr"], cell_count_thr = config["cell_count_thr"]),
		



 		